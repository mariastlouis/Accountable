// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressForm component tests should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddressForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="input-info"
>
          <div
                    className="left-side"
          >
                    <h2
                              className="highlight"
                    >
                               Enter your address 
                    </h2>
                    <form
                              onSubmit={[Function]}
                    >
                              <div
                                        className="input"
                              >
                                        <PlacesAutocomplete
                                                  autocompleteItem={[Function]}
                                                  classNames={Object {}}
                                                  clearItemsOnError={false}
                                                  debounce={200}
                                                  googleLogo={true}
                                                  googleLogoType="default"
                                                  highlightFirstSuggestion={false}
                                                  inputProps={
                                                            Object {
                                                                      "onChange": [Function],
                                                                      "value": "Denver, CO",
                                                                    }
                                                  }
                                                  onError={[Function]}
                                                  options={Object {}}
                                                  styles={
                                                            Object {
                                                                      "input": Object {
                                                                        "border": "2px solid #3a6985",
                                                                        "display": "inline-block",
                                                                        "fontSize": "20px",
                                                                        "height": "21px",
                                                                        "padding": "10px",
                                                                        "width": "300px",
                                                                      },
                                                                    }
                                                  }
                                        />
                              </div>
                              <div
                                        className="button-class"
                              >
                                        <button
                                                  className="submit-button"
                                                  type="submit"
                                        >
                                                   Find my lawmakers
                                        </button>
                              </div>
                    </form>
          </div>
          <div
                    className="middle-div"
          >
                    <span
                              className="big-Or"
                    >
                               OR 
                    </span>
          </div>
          <div
                    className="right-div"
          >
                    <h2
                              className="highlight"
                    >
                               Select a lawmaker 
                    </h2>
                    <withRouter(Connect(SelectLawmaker)) />
          </div>
</div>,
        <div
          className="lawmaker-results"
>
          
</div>,
      ],
      "className": "address-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="left-side"
>
              <h2
                            className="highlight"
              >
                             Enter your address 
              </h2>
              <form
                            onSubmit={[Function]}
              >
                            <div
                                          className="input"
                            >
                                          <PlacesAutocomplete
                                                        autocompleteItem={[Function]}
                                                        classNames={Object {}}
                                                        clearItemsOnError={false}
                                                        debounce={200}
                                                        googleLogo={true}
                                                        googleLogoType="default"
                                                        highlightFirstSuggestion={false}
                                                        inputProps={
                                                                      Object {
                                                                                    "onChange": [Function],
                                                                                    "value": "Denver, CO",
                                                                                  }
                                                        }
                                                        onError={[Function]}
                                                        options={Object {}}
                                                        styles={
                                                                      Object {
                                                                                    "input": Object {
                                                                                      "border": "2px solid #3a6985",
                                                                                      "display": "inline-block",
                                                                                      "fontSize": "20px",
                                                                                      "height": "21px",
                                                                                      "padding": "10px",
                                                                                      "width": "300px",
                                                                                    },
                                                                                  }
                                                        }
                                          />
                            </div>
                            <div
                                          className="button-class"
                            >
                                          <button
                                                        className="submit-button"
                                                        type="submit"
                                          >
                                                         Find my lawmakers
                                          </button>
                            </div>
              </form>
</div>,
            <div
              className="middle-div"
>
              <span
                            className="big-Or"
              >
                             OR 
              </span>
</div>,
            <div
              className="right-div"
>
              <h2
                            className="highlight"
              >
                             Select a lawmaker 
              </h2>
              <withRouter(Connect(SelectLawmaker)) />
</div>,
          ],
          "className": "input-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2
                  className="highlight"
>
                   Enter your address 
</h2>,
                <form
                  onSubmit={[Function]}
>
                  <div
                                    className="input"
                  >
                                    <PlacesAutocomplete
                                                      autocompleteItem={[Function]}
                                                      classNames={Object {}}
                                                      clearItemsOnError={false}
                                                      debounce={200}
                                                      googleLogo={true}
                                                      googleLogoType="default"
                                                      highlightFirstSuggestion={false}
                                                      inputProps={
                                                                        Object {
                                                                                          "onChange": [Function],
                                                                                          "value": "Denver, CO",
                                                                                        }
                                                      }
                                                      onError={[Function]}
                                                      options={Object {}}
                                                      styles={
                                                                        Object {
                                                                                          "input": Object {
                                                                                            "border": "2px solid #3a6985",
                                                                                            "display": "inline-block",
                                                                                            "fontSize": "20px",
                                                                                            "height": "21px",
                                                                                            "padding": "10px",
                                                                                            "width": "300px",
                                                                                          },
                                                                                        }
                                                      }
                                    />
                  </div>
                  <div
                                    className="button-class"
                  >
                                    <button
                                                      className="submit-button"
                                                      type="submit"
                                    >
                                                       Find my lawmakers
                                    </button>
                  </div>
</form>,
              ],
              "className": "left-side",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Enter your address ",
                  "className": "highlight",
                },
                "ref": null,
                "rendered": " Enter your address ",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="input"
>
                      <PlacesAutocomplete
                                            autocompleteItem={[Function]}
                                            classNames={Object {}}
                                            clearItemsOnError={false}
                                            debounce={200}
                                            googleLogo={true}
                                            googleLogoType="default"
                                            highlightFirstSuggestion={false}
                                            inputProps={
                                                                  Object {
                                                                                        "onChange": [Function],
                                                                                        "value": "Denver, CO",
                                                                                      }
                                            }
                                            onError={[Function]}
                                            options={Object {}}
                                            styles={
                                                                  Object {
                                                                                        "input": Object {
                                                                                          "border": "2px solid #3a6985",
                                                                                          "display": "inline-block",
                                                                                          "fontSize": "20px",
                                                                                          "height": "21px",
                                                                                          "padding": "10px",
                                                                                          "width": "300px",
                                                                                        },
                                                                                      }
                                            }
                      />
</div>,
                    <div
                      className="button-class"
>
                      <button
                                            className="submit-button"
                                            type="submit"
                      >
                                             Find my lawmakers
                      </button>
</div>,
                  ],
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <PlacesAutocomplete
                        autocompleteItem={[Function]}
                        classNames={Object {}}
                        clearItemsOnError={false}
                        debounce={200}
                        googleLogo={true}
                        googleLogoType="default"
                        highlightFirstSuggestion={false}
                        inputProps={
                                                Object {
                                                                        "onChange": [Function],
                                                                        "value": "Denver, CO",
                                                                      }
                        }
                        onError={[Function]}
                        options={Object {}}
                        styles={
                                                Object {
                                                                        "input": Object {
                                                                          "border": "2px solid #3a6985",
                                                                          "display": "inline-block",
                                                                          "fontSize": "20px",
                                                                          "height": "21px",
                                                                          "padding": "10px",
                                                                          "width": "300px",
                                                                        },
                                                                      }
                        }
/>,
                      "className": "input",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autocompleteItem": [Function],
                        "classNames": Object {},
                        "clearItemsOnError": false,
                        "debounce": 200,
                        "googleLogo": true,
                        "googleLogoType": "default",
                        "highlightFirstSuggestion": false,
                        "inputProps": Object {
                          "onChange": [Function],
                          "value": "Denver, CO",
                        },
                        "onError": [Function],
                        "options": Object {},
                        "styles": Object {
                          "input": Object {
                            "border": "2px solid #3a6985",
                            "display": "inline-block",
                            "fontSize": "20px",
                            "height": "21px",
                            "padding": "10px",
                            "width": "300px",
                          },
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="submit-button"
                        type="submit"
>
                         Find my lawmakers
</button>,
                      "className": "button-class",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": " Find my lawmakers",
                        "className": "submit-button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": " Find my lawmakers",
                      "type": "button",
                    },
                    "type": "div",
                  },
                ],
                "type": "form",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="big-Or"
>
                 OR 
</span>,
              "className": "middle-div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " OR ",
                "className": "big-Or",
              },
              "ref": null,
              "rendered": " OR ",
              "type": "span",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2
                  className="highlight"
>
                   Select a lawmaker 
</h2>,
                <withRouter(Connect(SelectLawmaker)) />,
              ],
              "className": "right-div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Select a lawmaker ",
                  "className": "highlight",
                },
                "ref": null,
                "rendered": " Select a lawmaker ",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "lawmaker-results",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="input-info"
>
            <div
                        className="left-side"
            >
                        <h2
                                    className="highlight"
                        >
                                     Enter your address 
                        </h2>
                        <form
                                    onSubmit={[Function]}
                        >
                                    <div
                                                className="input"
                                    >
                                                <PlacesAutocomplete
                                                            autocompleteItem={[Function]}
                                                            classNames={Object {}}
                                                            clearItemsOnError={false}
                                                            debounce={200}
                                                            googleLogo={true}
                                                            googleLogoType="default"
                                                            highlightFirstSuggestion={false}
                                                            inputProps={
                                                                        Object {
                                                                                    "onChange": [Function],
                                                                                    "value": "Denver, CO",
                                                                                  }
                                                            }
                                                            onError={[Function]}
                                                            options={Object {}}
                                                            styles={
                                                                        Object {
                                                                                    "input": Object {
                                                                                      "border": "2px solid #3a6985",
                                                                                      "display": "inline-block",
                                                                                      "fontSize": "20px",
                                                                                      "height": "21px",
                                                                                      "padding": "10px",
                                                                                      "width": "300px",
                                                                                    },
                                                                                  }
                                                            }
                                                />
                                    </div>
                                    <div
                                                className="button-class"
                                    >
                                                <button
                                                            className="submit-button"
                                                            type="submit"
                                                >
                                                             Find my lawmakers
                                                </button>
                                    </div>
                        </form>
            </div>
            <div
                        className="middle-div"
            >
                        <span
                                    className="big-Or"
                        >
                                     OR 
                        </span>
            </div>
            <div
                        className="right-div"
            >
                        <h2
                                    className="highlight"
                        >
                                     Select a lawmaker 
                        </h2>
                        <withRouter(Connect(SelectLawmaker)) />
            </div>
</div>,
          <div
            className="lawmaker-results"
>
            
</div>,
        ],
        "className": "address-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="left-side"
>
                <h2
                                className="highlight"
                >
                                 Enter your address 
                </h2>
                <form
                                onSubmit={[Function]}
                >
                                <div
                                                className="input"
                                >
                                                <PlacesAutocomplete
                                                                autocompleteItem={[Function]}
                                                                classNames={Object {}}
                                                                clearItemsOnError={false}
                                                                debounce={200}
                                                                googleLogo={true}
                                                                googleLogoType="default"
                                                                highlightFirstSuggestion={false}
                                                                inputProps={
                                                                                Object {
                                                                                                "onChange": [Function],
                                                                                                "value": "Denver, CO",
                                                                                              }
                                                                }
                                                                onError={[Function]}
                                                                options={Object {}}
                                                                styles={
                                                                                Object {
                                                                                                "input": Object {
                                                                                                  "border": "2px solid #3a6985",
                                                                                                  "display": "inline-block",
                                                                                                  "fontSize": "20px",
                                                                                                  "height": "21px",
                                                                                                  "padding": "10px",
                                                                                                  "width": "300px",
                                                                                                },
                                                                                              }
                                                                }
                                                />
                                </div>
                                <div
                                                className="button-class"
                                >
                                                <button
                                                                className="submit-button"
                                                                type="submit"
                                                >
                                                                 Find my lawmakers
                                                </button>
                                </div>
                </form>
</div>,
              <div
                className="middle-div"
>
                <span
                                className="big-Or"
                >
                                 OR 
                </span>
</div>,
              <div
                className="right-div"
>
                <h2
                                className="highlight"
                >
                                 Select a lawmaker 
                </h2>
                <withRouter(Connect(SelectLawmaker)) />
</div>,
            ],
            "className": "input-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2
                    className="highlight"
>
                     Enter your address 
</h2>,
                  <form
                    onSubmit={[Function]}
>
                    <div
                                        className="input"
                    >
                                        <PlacesAutocomplete
                                                            autocompleteItem={[Function]}
                                                            classNames={Object {}}
                                                            clearItemsOnError={false}
                                                            debounce={200}
                                                            googleLogo={true}
                                                            googleLogoType="default"
                                                            highlightFirstSuggestion={false}
                                                            inputProps={
                                                                                Object {
                                                                                                    "onChange": [Function],
                                                                                                    "value": "Denver, CO",
                                                                                                  }
                                                            }
                                                            onError={[Function]}
                                                            options={Object {}}
                                                            styles={
                                                                                Object {
                                                                                                    "input": Object {
                                                                                                      "border": "2px solid #3a6985",
                                                                                                      "display": "inline-block",
                                                                                                      "fontSize": "20px",
                                                                                                      "height": "21px",
                                                                                                      "padding": "10px",
                                                                                                      "width": "300px",
                                                                                                    },
                                                                                                  }
                                                            }
                                        />
                    </div>
                    <div
                                        className="button-class"
                    >
                                        <button
                                                            className="submit-button"
                                                            type="submit"
                                        >
                                                             Find my lawmakers
                                        </button>
                    </div>
</form>,
                ],
                "className": "left-side",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Enter your address ",
                    "className": "highlight",
                  },
                  "ref": null,
                  "rendered": " Enter your address ",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="input"
>
                        <PlacesAutocomplete
                                                autocompleteItem={[Function]}
                                                classNames={Object {}}
                                                clearItemsOnError={false}
                                                debounce={200}
                                                googleLogo={true}
                                                googleLogoType="default"
                                                highlightFirstSuggestion={false}
                                                inputProps={
                                                                        Object {
                                                                                                "onChange": [Function],
                                                                                                "value": "Denver, CO",
                                                                                              }
                                                }
                                                onError={[Function]}
                                                options={Object {}}
                                                styles={
                                                                        Object {
                                                                                                "input": Object {
                                                                                                  "border": "2px solid #3a6985",
                                                                                                  "display": "inline-block",
                                                                                                  "fontSize": "20px",
                                                                                                  "height": "21px",
                                                                                                  "padding": "10px",
                                                                                                  "width": "300px",
                                                                                                },
                                                                                              }
                                                }
                        />
</div>,
                      <div
                        className="button-class"
>
                        <button
                                                className="submit-button"
                                                type="submit"
                        >
                                                 Find my lawmakers
                        </button>
</div>,
                    ],
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <PlacesAutocomplete
                          autocompleteItem={[Function]}
                          classNames={Object {}}
                          clearItemsOnError={false}
                          debounce={200}
                          googleLogo={true}
                          googleLogoType="default"
                          highlightFirstSuggestion={false}
                          inputProps={
                                                    Object {
                                                                              "onChange": [Function],
                                                                              "value": "Denver, CO",
                                                                            }
                          }
                          onError={[Function]}
                          options={Object {}}
                          styles={
                                                    Object {
                                                                              "input": Object {
                                                                                "border": "2px solid #3a6985",
                                                                                "display": "inline-block",
                                                                                "fontSize": "20px",
                                                                                "height": "21px",
                                                                                "padding": "10px",
                                                                                "width": "300px",
                                                                              },
                                                                            }
                          }
/>,
                        "className": "input",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autocompleteItem": [Function],
                          "classNames": Object {},
                          "clearItemsOnError": false,
                          "debounce": 200,
                          "googleLogo": true,
                          "googleLogoType": "default",
                          "highlightFirstSuggestion": false,
                          "inputProps": Object {
                            "onChange": [Function],
                            "value": "Denver, CO",
                          },
                          "onError": [Function],
                          "options": Object {},
                          "styles": Object {
                            "input": Object {
                              "border": "2px solid #3a6985",
                              "display": "inline-block",
                              "fontSize": "20px",
                              "height": "21px",
                              "padding": "10px",
                              "width": "300px",
                            },
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <button
                          className="submit-button"
                          type="submit"
>
                           Find my lawmakers
</button>,
                        "className": "button-class",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": " Find my lawmakers",
                          "className": "submit-button",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": " Find my lawmakers",
                        "type": "button",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "form",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="big-Or"
>
                   OR 
</span>,
                "className": "middle-div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " OR ",
                  "className": "big-Or",
                },
                "ref": null,
                "rendered": " OR ",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2
                    className="highlight"
>
                     Select a lawmaker 
</h2>,
                  <withRouter(Connect(SelectLawmaker)) />,
                ],
                "className": "right-div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Select a lawmaker ",
                    "className": "highlight",
                  },
                  "ref": null,
                  "rendered": " Select a lawmaker ",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "lawmaker-results",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
